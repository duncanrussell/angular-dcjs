// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  describe("Controller:MainController", function() {
    var $controller, $httpBackend, $rootScope, $scope, Debug, MainController, dataAPI, dataResponse;
    $controller = void 0;
    $rootScope = void 0;
    $scope = void 0;
    Debug = void 0;
    $httpBackend = void 0;
    dataAPI = void 0;
    dataResponse = void 0;
    MainController = void 0;
    beforeEach(function() {
      return module('angularDcjsApp');
    });
    beforeEach(function() {
      inject(function($injector, _Debug_, _dataAPI_) {
        Debug = _Debug_;
        dataAPI = _dataAPI_;
        $rootScope = $injector.get('$rootScope');
        $scope = $rootScope.$new();
        $controller = $injector.get('$controller');
        $httpBackend = $injector.get('$httpBackend');
        dataResponse = [["DATETIME:date", "MEASURE: Units", "MEASURE: Royalty Price", "MEASURE: Customer Price", "DIMENSION:Vendor Identifier", "DIMENSION:Title", "DIMENSION:Label/Studio/Network", "DIMENSION:Product Type Identifier", "DIMENSION: Order Id", "DIMENSION:Postal Code", "DIMENSION: Customer Identifier", "DIMENSION:Sale/Return", "DIMENSION:Customer Currency", "DIMENSION:Country Code", "DIMENSION:Royalty Currency", "DIMENSION:Asset/Content Flavor"], ["9/27/13", 1, 3.49, 4.99, "0144_20121109", "Headh", "Yello", "D", "5.02E+09", "49915-2504", 2240000173, "S", "USD", "CL", "USD", "HD"], ["9/24/13", 1, 1.39, 1.99, "0099_20120827", "A Ond", "Const", "D", "2.03E+09", "29284-3466", 1642627348, "S", "USD", "BR", "USD", "SD"]];
        MainController = $controller('MainController', {
          '$scope': $scope,
          'Debug': Debug
        });
      });
    });
    afterEach(function() {
      $httpBackend.verifyNoOutstandingExpectation();
      return $httpBackend.verifyNoOutstandingRequest();
    });
    it("should be an array in measures", function() {
      return expect($scope.measures).toEqual(jasmine.any(Array));
    });
    it("Debug should be loaded", function() {
      return expect(Debug).not.toBeNull;
    });
    it("should call retrieve ", function() {
      spyOn($scope, 'retrieveData').andCallThrough();
      $scope.retrieveData();
      return expect($scope.retrieveData).toHaveBeenCalled();
    });
    it("should populate rows", function() {
      $scope.rows = dataResponse;
      return expect($scope.rows).toEqual(jasmine.any(Array));
    });
    it("should call identifyHeaders", function() {
      spyOn($scope, 'identifyHeaders').andCallThrough();
      $scope.identifyHeaders();
      return expect($scope.identifyHeaders).toHaveBeenCalled();
    });
    it("should call getParams", function() {
      spyOn($scope, 'getParams').andCallThrough();
      $scope.getParams();
      return expect($scope.getParams).toHaveBeenCalled();
    });
    it("should call log for Measures", function() {
      spyOn(Debug, 'input').andCallThrough();
      Debug.input();
      return expect(Debug.input).toHaveBeenCalled();
    });
    it("should call getParams", function() {
      spyOn($scope, 'getParams').andCallThrough();
      $scope.getParams();
      return expect($scope.getParams).toHaveBeenCalled();
    });
    it("should call log for Dimensions", function() {
      spyOn(Debug, 'input').andCallThrough();
      Debug.input();
      return expect(Debug.input).toHaveBeenCalled();
    });
    it("should add measures", function() {
      return expect($scope.measures.length).toBe > 0;
    });
    it("should add dimensions", function() {
      return expect($scope.dimensions.length).toBe > 0;
    });
    it("should add an input value", function() {
      spyOn(Debug, 'input').andCallThrough();
      Debug.input('Test');
      return expect(Debug.input).toHaveBeenCalled();
    });
    return it("should call output and get more than one item in array", function() {
      spyOn(Debug, 'output').andCallThrough();
      expect(Debug.output().length).toBe > 0;
      return expect(Debug.output).toHaveBeenCalled();
    });
  });

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
