// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  angular.module('dcModule', ['dcModule.templates']).directive("dcLine", function($compile) {
    if (!dc || !d3 || !crossfilter || !_) {
      throw 'You need to load DC, D3, Crossfilter and Underscore library';
    }
    return {
      scope: {
        data: '=',
        dimensions: '='
      },
      transclude: true,
      templateUrl: 'dc/line/template.html',
      controller: function($scope, $compile) {},
      link: function($scope, element, attrs) {
        var parseDate,
          _this = this;
        parseDate = d3.time.format("%m/%d/%Y").parse;
        $scope.$watch('data', function(data) {
          if (data) {
            $scope.dcLineChart = dc.lineChart('#dcLine');
            $scope.create();
          }
        });
        $scope.create = function() {
          var dateDimensions, groups, maxDate, minDate, totalSum;
          $scope.data.forEach(function(d) {
            d['DATETIME:date'] = parseDate(d['DATETIME:date']);
            d['DATETIME:date'].toISOString();
          });
          groups = crossfilter($scope.data);
          dateDimensions = groups.dimension(function(d) {
            return d['DATETIME:date'];
          });
          totalSum = dateDimensions.group().reduceSum(function(d) {
            return d['MEASURE:Customer Price'];
          });
          minDate = dateDimensions.bottom(1)[0]['DATETIME:date'];
          maxDate = dateDimensions.top(1)[0]['DATETIME:date'];
          $scope.dcLineChart.width(500).height(250).dimension(dateDimensions).group(totalSum, "Price").x(d3.time.scale().domain([minDate, maxDate])).yAxisLabel("Total").xAxisLabel("Data");
          dc.renderAll();
        };
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=dc-line.map
*/
