// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  if (!dc || !d3 || !crossfilter || !_) {
    throw 'You need to load DC, D3, Crossfilter and Underscore library';
  }

  angular.module('dcComposite', []).directive("dcComposite", function() {
    return {
      scope: {
        dcComposite: '=',
        dimensions: '=',
        measures: '=',
        filter: '='
      },
      templateUrl: 'dc/composite/template.html',
      link: function($scope, element, attrs) {
        var _this = this;
        attrs.$observe('id', function(id) {
          $scope.chartId = id ? id : 'dcLineDefault';
          return $scope.dcCompositeChart = dc.lineChart('#' + $scope.chartId);
        });
        attrs.$observe('height', function(height) {
          return $scope.height = height ? height : 150;
        });
        $scope.$watch('dimensions', function(dim) {
          if (dim) {
            return $scope.dimFilters = dim;
          }
        });
        $scope.$watch('measures', function(measure) {
          if (measure) {
            return $scope.measureFilters = measure;
          }
        });
        $scope.$watch('dcLine', function(dcLine) {
          if (dcLine) {
            $scope.create();
          }
        });
        $scope.$watch('filter', function(filter) {
          $scope.dcCompositeChart.filterAll();
          if (filter) {
            $scope.dcCompositeChart.filter(filter);
          } else {
            $scope.dcCompositeChart.filterAll();
          }
          return dc.redrawAll($scope.dcCompositeChart.chartGroup());
        });
        $scope.create = function() {
          $scope.dcCompositeChart.width(element.width()).height($scope.height).x(d3.scale.linear().domain([0, 20])).xAxisLabel("Date").legend(dc.legend().x(80).y(20).itemHeight(13).gap(5)).renderHorizontalGridLines(true).compose([dc.lineChart($scope.dcCompositeChart).dimension(dim).colors('red').group(grp1, "Top Line").x(d3.time.scale().domain([$scope.dcComposite.minDate, $scope.dcComposite.maxDate])), dc.lineChart($scope.dcCompositeChart).dimension(dim).colors('blue').group(grp2, "Bottom Line").x(d3.time.scale().domain([$scope.dcComposite.minDate, $scope.dcComposite.maxDate]))]).renderArea(true).renderHorizontalGridLines(true).elasticY(true).render();
          $scope.dcCompositeChart.width(element.width()).height($scope.height).margins({
            top: 10,
            left: 50,
            right: 10,
            bottom: 50
          }).dimension($scope.dcLine.dimension).group($scope.dcLine.sum).x(d3.time.scale().domain([$scope.dcComposite.minDate, $scope.dcComposite.maxDate])).xAxisLabel("Date").renderArea(true).renderHorizontalGridLines(true).elasticY(true);
          $scope.dcLineChart.render();
        };
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=dc-composite.map
*/
