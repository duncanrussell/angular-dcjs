// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  if (!dc || !d3 || !crossfilter || !_) {
    throw 'You need to load DC, D3, Crossfilter and Underscore library';
  }

  angular.module('dcPie', []).directive("dcPie", function($rootScope) {
    return {
      restrict: 'AC',
      scope: {
        dcPie: '=',
        dimensions: '=',
        measures: '=',
        filter: '='
      },
      templateUrl: 'dc/pie/template.html',
      link: function($scope, element, attrs) {
        attrs.$observe('id', function(id) {
          return $scope.chartId = id ? id : 'dcPieDefault';
        });
        $scope.$watch('dimensions', function(dim) {
          if (dim) {
            return $scope.dimFilters = dim;
          }
        });
        $scope.$watch('measures', function(measure) {
          if (measure) {
            return $scope.measureFilters = measure;
          }
        });
        $scope.$watch('filter', function(filter) {
          if ($scope.dcPieChart) {
            $scope.dcPieChart.filterAll();
            if (filter) {
              $scope.dcPieChart.filter(filter);
            }
            return $scope.dcPieChart.redraw();
          }
        });
        $scope.$watch('dcPie', function(dcPie) {
          if (dcPie) {
            return $scope.create();
          }
        });
        $scope.setHeight = function(height) {
          if ($scope.dcPieChart && height) {
            return $scope.dcPieChart.height(height);
          }
        };
        $scope.dcPie.update = function() {
          return $scope.dcPieChart.dimension($scope.dcPie.dimension).group($scope.dcPie.sum).redraw();
        };
        $scope.setMetrics = function() {
          if ($scope.dimFilter && $scope.measureFilter) {
            $scope.dcPieChart.filterAll();
            $scope.dcPie.dimension = $scope.dcPie.data.dimension(function(d) {
              return d['DIMENSION:' + $scope.dimFilter];
            });
            $scope.dcPie.sum = $scope.dcPie.dimension.group().reduceSum(function(d) {
              return d['MEASURE:' + $scope.measureFilter];
            });
            return $scope.dcPieChart.dimension($scope.dcPie.dimension).group($scope.dcPie.sum).redraw();
          }
        };
        $scope.create = function() {
          $scope.dcPieChart = dc.pieChart('#' + $scope.chartId);
          $scope.dcPieChart.width(attrs.width).height(attrs.height).dimension($scope.dcPie.dimension).group($scope.dcPie.sum);
          $scope.dcPieChart.render();
        };
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=dc-pie.map
*/
